version: '3.5'

services:
  nexus-repository:
    image: "sonatype/nexus3"
    container_name: ${NEXUS_REPOSITORY_NAME}
    user: ${NEXUS_REPOSITORY_USER}
    restart: always
    ports:
      - "8081:8081"
      - "8082:8082"
    volumes:
      - ./volume/nexus:/nexus-data
    networks:
      - bacsystem

  postgres-dev:
    container_name: ${POSTGRESQL_DB_NAME}
    image: postgres:latest
    restart: always
    ports:
      - ${POSTGRESQL_DB_PORT}:${POSTGRESQL_DB_PORT}
    volumes:
      - ./volume/postgres/latest:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRESQL_PASSWORD}
    networks:
      - bacsystem

  redis-dev:
    container_name: redis-db
    image: redis:alpine3.18
    restart: always
    ports:
      - "6379:6379"
      - "8001:8001"
    volumes:
      - ./volume/redis:/data
    networks:
      - bacsystem

  mongo-dev:
    container_name: ${MONGO_DB_NAME}
    image: mongo:latest
    volumes:
      - ./volume/mongo:/data/db
    ports:
      - ${MONGO_PORT}:${MONGO_PORT}
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_ROOT_DATABASE: ${MONGO_DATABASE}
    command: [ '--auth' ]
    networks:
      - bacsystem

  rabbitmq-dev:
    image: "rabbitmq:3.11.3-management-alpine"
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - bacsystem
    volumes:
      - ./volume/rabbitmq:/var/lib/rabbitmq

  sql-server-dev:
    build:
      context: ../../../../bacsystem/infrastructure/docker/images/ms-server
      dockerfile: dockerfile
    container_name: ${MS_SERVER_CONTAINER_NAME}
    restart: always
    ports:
      - ${MS_SERVER_DB_PORT}:${MS_SERVER_DB_PORT}
    environment:
      - MSSQL_SA_PASSWORD=C44910167d$
      - ACCEPT_EULA=Y
      - MSSQL_PID=Express
      - MSSQL_DATA_DIR=/var/opt/mssql/data
      - MSSQL_LOG_DIR=/var/opt/mssql/log
      - MSSQL_BACKUP_DIR=/var/opt/mssql/backup
    healthcheck:
      test: sqlcmd -S db1.internal.prod.bacsystem.com -U SA -P 'C44910167d$' -Q 'select distinct 1 from AdventureWorksDW2017.dbo.DimDate'
    volumes:
      - ./volume/mssql:/var/opt/mssql/data
      - ./volume/mssql/log:/var/opt/mssql/log
      - ./volume/mssql/backup:/var/opt/mssql/backup
    networks:
      bacsystem:
        aliases:
          - db1.internal.prod.bacsystem.com

  mysql-db:
    image: mariadb:10.3
    container_name: mariadb-dev
    restart: always
    hostname: db
    domainname: bacsystem.com
    ports:
      - "3306:3306"
      #command:
      #- mysqld
      #- --character-set-server=utf8mb4
      #- --collation-server=utf8mb4_unicode_ci
      #- --max_connections=200
      #- --max_heap_table_size=128M
      #- --max_allowed_packet=32M
      #- --tmp_table_size=128M
      #- --join_buffer_size=128M
      #- --innodb_buffer_pool_size=1G
      #- --innodb_doublewrite=ON
      #- --innodb_flush_log_at_timeout=3
      #- --innodb_read_io_threads=32
      #- --innodb_write_io_threads=16
      #- --innodb_buffer_pool_instances=9
      #- --innodb_file_format=Barracuda
      #- --innodb_large_prefix=1
      #- --innodb_io_capacity=5000
      #- --innodb_io_capacity_max=10000
    environment:
      - MYSQL_ROOT_PASSWORD=C44910167d
      - TZ=America/Lima
    volumes:
      - ./volume/mysql:/var/lib/mysql
    networks:
      - bacsystem

  cacti-app:
    image: smcline06/cacti
    container_name: cacti
    domainname: bacsystem.com
    hostname: cacti
    restart: always
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DB_NAME=cacti_master
      - DB_USER=cactiuser
      - DB_PASS=cactipassword
      - DB_HOST=db
      - DB_PORT=3306
      - DB_ROOT_PASS=C44910167d
      - INITIALIZE_DB=1
      - TZ=America/Lima

    volumes:
      - ./volume/cacti/data:/cacti
      - ./volume/cacti/spine:/spine
      - ./volume/cacti/backups:/backups
    depends_on:
      - mysql-db
    networks:
      - bacsystem

  redis-dev-1:
    container_name: redis-dbs
    image: redis:alpine3.18
    restart: always
    ports:
      - "6378:6379"
      - "8003:8003"
    volumes:
      - ./volume/redis:/data
    networks:
      - casa




  #redis-dev:
  #    container_name: redis-db
  #    image: redis:alpine3.18
  #    restart: always
  #    ports:
  #      - "6379:6379"
  #      - "8001:8001"
  #    volumes:
  #      - ./volume/redis:/data
  #    networks:
  #      - bacsystem

  #'{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}'